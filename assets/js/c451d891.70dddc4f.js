"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[5802],{19785:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=s(74848),i=s(28453);const r={title:"Docusaurus Deployment Tutorial",sidebar_position:1},o=void 0,a={id:"intro",title:"Docusaurus Deployment Tutorial",description:"For the team:",source:"@site/deployment-tutorial/intro.md",sourceDirName:".",slug:"/intro",permalink:"/project-003-story-builder-team-2/deployment-tutorial/intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Docusaurus Deployment Tutorial",sidebar_position:1},sidebar:"docsSidebar"},l={},c=[{value:"For the team:",id:"for-the-team",level:3},{value:"MAKE SURE YOU ARE ON THE MAIN BRANCH WHEN YOU TRY TO DEPLOY",id:"make-sure-you-are-on-the-main-branch-when-you-try-to-deploy",level:2}];function h(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h3,{id:"for-the-team",children:"For the team:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"First make sure you have an SSH key connected to your GitHub."})}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["check @: ",(0,t.jsx)(n.a,{href:"https://github.com/settings/keys",children:"https://github.com/settings/keys"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.em,{children:"If you do not have an SSH key yet..."})}),"\n",(0,t.jsx)(n.p,{children:"a. In a GitBash terminal:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'[On Windows & Mac] ssh-keygen -t rsa -b 4096 -C "your-github-email@email.com"\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Press Enter to accept the default file location (~/.ssh/id_rsa)"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"The key file is saved in this location if you don't change it: ~/.ssh/id_rsa.pub"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Set a passcode/passphase if you wish (I didn't want one)"}),"\n",(0,t.jsx)(n.p,{children:"Next, in the same terminal:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] cat ~/.ssh/id_rsa.pub\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Copy the entire output it gives --\x3e go to ",(0,t.jsx)(n.a,{href:"https://github.com/settings/keys",children:"https://github.com/settings/keys"})," again."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["b. Click on ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"New SSH key"})})," and then paste in the key into the ",(0,t.jsx)(n.em,{children:(0,t.jsx)(n.strong,{children:"Key"})})," box and give it a title."]}),"\n",(0,t.jsxs)(n.p,{children:["c. Then, add your ",(0,t.jsx)(n.strong,{children:"SSH key"})," to your ",(0,t.jsx)(n.strong,{children:"SSH Agent"})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'[On Windows] eval $(ssh-agent -s)\n             ssh-add ~/.ssh/id_rsa\n\n[On Mac] eval "$(ssh-agent -s)"\n         ssh-add -K ~/.ssh/id_rsa\n'})}),"\n",(0,t.jsx)(n.p,{children:"d. Test that your SSH connection is working properly..."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] ssh -T git@github.com\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["The output from it should be: ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] Hi _____your-username_____! You have sucessfully authenticated, but GitHub does not provide shell access.\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Make sure the remote URL is set to the correct one:"})}),"\n",(0,t.jsx)(n.p,{children:"a. First, check the current remote URL:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] git remote -v\n"})}),"\n",(0,t.jsx)(n.p,{children:"b. Make sure it is the valid id to our repo, otherwise use this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] git remote set-url origin git@github.com:Capstone-Projects-2025-Spring/project-003-story-builder-team-2.git\n"})}),"\n",(0,t.jsxs)(n.p,{children:["c. Verify with: ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] git remote -v\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Which should show: ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] origin  git@github.com:Capstone-Projects-2025-Spring/project-003-story-builder-team-2.git (fetch)\n                origin  git@github.com:Capstone-Projects-2025-Spring/project-003-story-builder-team-2.git (push)\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"If that is true, then you should be able to ssh into the organization (our github repo) and be able to commit, push, deploy, etc. yk"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"How to setup Yarn to deploy the Docusaurus Page changes:"})}),"\n",(0,t.jsx)(n.p,{children:"a. In your VSCode terminal:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Obviously go to the project directory. Then go to the documentation section: ",(0,t.jsx)("br",{}),(0,t.jsx)("br",{})]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] cd documentation\n"})}),"\n",(0,t.jsx)(n.p,{children:"b. Assuming you have Node.js installed, you need to download Yarn first. Do this while still in the documentation location. This only has to be run once in the very beginning."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] npm install --global yarn\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Now Yarn should be installed!"})," ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.p,{children:["c. Use the following command to install the project-specific dependencies listen in our package.json file. Do this while still in the documentation location. This only has to be run once in the very beginning. ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] yarn install\n"})}),"\n",(0,t.jsxs)(n.p,{children:["d. After yarn is installed, (and you have made changes to the docusaurus pages), run a local version of the pages to test it: ",(0,t.jsx)("br",{})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] yarn start\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This should show you if you have any build faults, and how to fix them. It also should update live. Everytime you are in your VSCode terminal, you can CTRL + S (or whatever is the equivalent on Mac) to live-update and save the page. You can view the changes in real-time."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"e. You can also test the build without checking it visually by doing:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:"[On Windows & Mac] yarn build\n"})}),"\n",(0,t.jsx)(n.p,{children:"f. If you are satisfied with your changes, you can deploy them to the main page (the one we can all access through our GitHub repo):"}),"\n",(0,t.jsx)(n.h2,{id:"make-sure-you-are-on-the-main-branch-when-you-try-to-deploy",children:"MAKE SURE YOU ARE ON THE MAIN BRANCH WHEN YOU TRY TO DEPLOY"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-jsx",children:'[On Windows] $env:GIT_USER="tur97019"\n             $env:ORGANIZATION_NAME="Capstone-Projects-2025-Spring"\n             $env:PROJECT_NAME="project-003-story-builder-team-2"\n             $env:USE_SSH="true"\n             yarn deploy\n\n[On Mac] export GIT_USER="tur97019"\n         export ORGANIZATION_NAME="Capstone-Projects-2025-Spring"\n         export PROJECT_NAME="project-003-story-builder-team-2"\n         export USE_SSH="true"\n         yarn deploy\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"And then hopefully that works. We rate that 5 booms for sure."})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);